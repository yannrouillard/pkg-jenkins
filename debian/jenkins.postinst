#!/bin/sh
# postinst script for jenkins-full
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Setup environment variables for Jenkins
export JENKINS_ROOT="/usr/share/jenkins"
export JENKINS_HOME="/var/lib/jenkins"

case "$1" in
    configure)
        # Create jenkins user if it doesn't exist.
        if ! id jenkins > /dev/null 2>&1 ; then
            adduser --system --home /var/lib/jenkins --no-create-home \
                --group --disabled-password --quiet --shell /bin/bash \
                jenkins 
        fi
        # Deal with migration from upstream packaging
        # which does not user jenkins group - uses nogroup
        if ! getent group jenkins > /dev/null 2>&1 ; then
            addgroup --system --quiet jenkins
            usermod -g jenkins jenkins > /dev/null 2>&1
        fi
        # Fix directory permissions
        chown -R jenkins:jenkins /var/log/jenkins || true
        chown -R jenkins:jenkins ${JENKINS_HOME} || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
